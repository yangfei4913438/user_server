// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 用户表，存储用户的基本信息和关联的角色
model User {
  id        String     @id @default(uuid()) /// 用户ID，UUID格式
  username  String?    @unique @db.VarChar(100) /// 用户名，唯一, 用户名、邮箱、手机号三选一必填
  email     String?    @unique @db.VarChar(100) /// 邮箱，唯一, 用户名、邮箱、手机号三选一必填
  phone     String?    @unique @db.VarChar(11) /// 手机号, 唯一, 用户名、邮箱、手机号三选一必填
  password  String     @db.VarChar(200) /// 登录密码, hash后的密码
  nickname  String     @db.VarChar(50) /// 昵称
  avatar    String?    @db.VarChar(255) /// 头像url，可选
  birthday  DateTime? /// 生日，可选
  hometown  String?    @db.VarChar(100) /// 家乡，可选
  createdAt DateTime   @default(now()) @map("created_at") /// 创建时间
  updatedAt DateTime   @default(now()) @updatedAt @map("updated_at") /// 更新时间
  UserRole  UserRole[]
  AuditLog  AuditLog[]

  @@map("users")
}

/// 角色表，存储角色的基本信息
model Role {
  id             String           @id @default(uuid()) /// 角色ID
  name           String           @unique @db.VarChar(100) /// 角色名称，唯一
  description    String?          @db.VarChar(255) /// 角色描述
  UserRole       UserRole[]
  RolePermission RolePermission[]

  @@map("roles")
}

/// 用户和角色关联表
model UserRole {
  userId String @map("user_id")
  roleId String @map("role_id")
  users  User   @relation(fields: [userId], references: [id])
  roles  Role   @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
  @@map("user_roles")
}

/// 权限表，存储权限的基本信息
model Permission {
  id             String           @id @default(uuid()) /// 权限ID
  name           String           @unique @db.VarChar(100) /// 权限名称，唯一
  description    String?          @db.VarChar(255) /// 权限描述
  RolePermission RolePermission[]

  @@map("permissions")
}

/// 角色和权限关联表
model RolePermission {
  roleId       String     @map("role_id")
  permissionId String     @map("permission_id")
  roles        Role       @relation(fields: [roleId], references: [id])
  permissions  Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("role_permissions")
}

// 一个用户可以有多个审计日志，一个审计日志对应一个用户。
// 这里不需要单独建立审计日志和用户的关联表，因为用户和审计日志是一对多的关系
/// 审计日志表，存储审计日志的基本信息
model AuditLog {
  id        String   @id @default(uuid())
  action    String   @db.VarChar(100) /// 行为描述
  result    String   @db.VarChar(100) /// 结果
  userId    String   @map("user_id") /// 用户ID, 外键，连接用户表，改动点
  createdAt DateTime @default(now()) @map("created_at") /// 创建时间
  user      User     @relation(fields: [userId], references: [id])

  @@map("audit_logs")
}
